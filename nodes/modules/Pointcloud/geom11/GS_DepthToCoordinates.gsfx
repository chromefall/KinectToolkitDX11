//@author: tmp 
//@help: StreamOut of coordinates calculated with the Kinect Depth Texture
//@tags: DX11, Kinect, Pointcloud
//@credits: vvvv

float4x4 tW <string uiname="Transform In";>;

Texture2D texDepth <string uiname="Depth";>;
float2 FOV;
struct VS_IN
{
	float4 pos : POSITION;
	float2 uv : TEXCOORD0;
	uint iv : SV_VertexID;
};

struct VS_OUT
{
	float4 pos : POSITION;
	float2 uv : TEXCOORD0;
};

SamplerState sPoint : IMMUTABLE
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Border;
    AddressV = Border;
};

VS_OUT VS(VS_IN input)
{
	VS_OUT o;
	float depth =  texDepth.SampleLevel(sPoint,input.uv.xy,0).r * 65.535 ;
	float XtoZ = tan(FOV.x/2) * 2;
    float YtoZ = tan(FOV.y/2) * 2;
	
	input.pos.x = ((input.uv.x - 0.5) * depth * XtoZ * -1);
	input.pos.y = ((0.5 - input.uv.y) * depth * YtoZ);
	input.pos.z = depth;
	input.pos = mul(input.pos, tW);
	
	o.uv = input.uv;
	o.pos = input.pos;
	
    return o;
}


GeometryShader StreamOutGS = ConstructGSWithSO( CompileShader( vs_4_0, VS() ), "POSITION.xyzw;TEXCOORD0.xy",NULL,NULL,NULL,-1 );

technique10 PassMesh
{
    pass PP2
    {
        SetVertexShader( CompileShader( vs_4_0, VS() ) );
        SetGeometryShader( StreamOutGS );
    }  
}

